# .github/workflows/iac-plan.yml

name: 'Terraform Plan on PR'

on:
  pull_request:
    branches:
      - main
    paths:
      - 'terragrunt/**'

permissions:
  id-token: write   # Required for OIDC authentication with AWS
  contents: read    # Required to check out the code
  pull-requests: write # Required to post comments on the PR

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533267189928:role/GitHubActionsTerragruntRole # ARN of the IAM role
          aws-region: eu-north-1 # Should match the region of your infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5 # Pinning Terraform version for consistency

      - name: Setup Terragrunt
        run: |
          mkdir -p .local/bin
          wget -O .local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v0.58.10/terragrunt_linux_amd64
          chmod +x .local/bin/terragrunt

      - name: Add local bin to PATH
        run: echo "$GITHUB_WORKSPACE/.local/bin" >> $GITHUB_PATH

      - name: Terragrunt Plan
        id: plan
        run: |
          PLAN_OUTPUT=$(terragrunt run-all plan -no-color -input=false)
          echo "PLAN_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$PLAN_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post Plan as PR Comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–
            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN_OUTPUT}
            \`\`\`

            </details>`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
