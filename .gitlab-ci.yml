# .gitlab-ci.yml for the Task Manager Application

# Define the stages for the pipeline
stages:
  - build

variables:
  # Define the image name using GitLab's predefined variables.
  # The image will be stored in this project's container registry.
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  LATEST_TAG: $CI_REGISTRY_IMAGE:latest

# This job builds and pushes the Docker image using Kaniko,
build_with_kaniko:
  stage: build
  # Use the official Kaniko image.
  # The 'debug' tag includes a shell, which is useful for scripting.
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""] # Override entrypoint to allow our custom script to run.

  script:
  # Prepare Kaniko's authentication configuration for the GitLab Registry.
  # This creates a config file in the expected location that Kaniko uses to log in.
  - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

  # Execute Kaniko to build and push the image.
  # --context: The build context (our project directory).
  # --dockerfile: The path to our Dockerfile.
  # --destination: The destination image tag. We can specify it multiple times for multiple tags.
  - >
    /kaniko/executor
    --context $CI_PROJECT_DIR
    --dockerfile $CI_PROJECT_DIR/Dockerfile.app
    --destination $IMAGE_TAG
    --destination $LATEST_TAG

  # This job should only run for commits on the main branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
